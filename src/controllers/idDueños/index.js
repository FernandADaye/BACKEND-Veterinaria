// este funciona para mandar a llamar mis servicios de IdDue침o (la BD y endpoints estan ah칤)
const { idDue침os} = require ('../../servicios/idDue침os/index')
//para sacar tosidDue침osdo lo que se encuentra en ese objeto (idDue침o)
const objetoIdDue침o = new idDue침os();

// 拘럭샢拘럭샢 metodo get 拘럭샢拘럭샢游릴 //
const traer = async (req, res) => {
    try{
        const idDue침os = await objetoIdDue침o.getDue침os();
        res.status(200).json(idDue침os);
    } catch(error) {
        //lo siguiente es para hacer una gestion de errores en el caso de que algo no salga bien 
    res.status(500).json({ message: 'todo mal ' });
    }
}

// 拘럭샢拘럭샢 metodo post 拘럭샢拘럭샢游릴 //
    const crear = async (req, res) => {
    try{
        const nuevaInfo = await req.body;
        const okregistro = objetoIdDue침o.crearnuevaInfo(nuevaInfo);
        const mensaje = okregistro === true ?'bien' : 'mal'
        res.status(201).json({ message: mensaje , data: nuevaInfo });
    } catch(error) {
        //lo siguiente es para hacer una gestion de errores en el caso de que algo no sa
    res.status(500).json({ message: 'todo mal ' });
    }
};

// 拘럭샢拘럭샢 metodo patch 拘럭샢拘럭샢游린//
const editarInfo = (req, res) => {
    try{
        const idModificado = req.params.id;
        const nuevaInfo = req.body;
        objetoIdDue침o.modificacion(idModificado, nuevaInfo);
        res.status(200).json({message:'Todo sal칤o bien', id: idModificado});
    } catch(error) {
        //lo siguiente es para hacer una gestion de errores en el caso de que algo no sa
    res.status(500).json({ message: 'todo mal ' });
    }
}

// 拘럭샢拘럭샢 metodo delete 拘럭샢拘럭샢游린 //
    const eliminar  = (req, res) => {
    try{
        const idBorrado = req.params.id;
        objetoIdDue침o.borrarInfo(idBorrado)
        idDue침os.splice(posicion, 1);
        res.status(200).json({ message: 'Enemigo abatido ', id: idBorrado });
    } catch(error) {
        //lo siguiente es para hacer una gestion de errores en el caso de que algo no sa
    res.status(500).json({ message: 'todo mal ' });
    }


};

module.exports = {
    traer,
    crear, 
    editarInfo,
    eliminar
}

// esto funciona para manejar las entradas y salidas de los servicios 